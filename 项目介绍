# 关东地区旅游指南 - AI开发规范
我没有制作过网页，如果我的提议和正规专业的有差别，请你一定根据专业制作网页的水平，提出建议，推荐优化方案。
## 🚨 核心铁律（AI必须牢记）

### **绝对禁止事项**
```
❌ 绝对不可以胡编乱造任何内容
❌ 绝对不可以自己编写任何活动信息  
❌ 绝对不可以估算数据（访客数、花火数等）
❌ 绝对不可以不使用指定模板
```

### **强制执行原则**
```
✅ 模板只负责样式，信息内容必须找用户要
✅ 所有网页显示的数据必须向用户索取官方来源
✅ 严格使用指定的标准模板
✅ 修改前必须确认层级
✅ 按照项目介绍执行，不可自由发挥
```

## 📋 五层架构定义

```
第1层：主页 (/)                     - 12个月份选择
第2层：月份页 (/july)                - 当月活动类型展示  
第3层：活动页 (/july/hanabi)         - 地区选择入口
第4层：地区页 (/july/hanabi/tokyo)   - 具体活动列表
第5层：详情页                       - 单个活动详情
```

## 🔧 模板系统（严格使用）

### **各层模板文件**
```
第1层模板：src/app/page.tsx                           
第2层模板：src/components/MonthTemplate.tsx           
第3层模板：src/components/ActivityTemplate.tsx        
第4层模板：src/components/RegionalHanabiTemplate.tsx  ⭐ 唯一标准模板
第5层模板：src/components/HanabiDetailTemplate.tsx    
```

### **⚠️ 第4层模板特别说明**
```
🎆 RegionalHanabiTemplate.tsx - 项目唯一第四层地区花火模板
📍 文件路径：src/components/RegionalHanabiTemplate.tsx
🚨 严禁修改、替换或创建替代版本
✅ 已通过用户验证，正确显示汉字标题
📋 内置完整数据格式规范和显示要求
🔄 当用户说"四层地区花火模板"时，专指此文件
```

### **⚠️ 第5层模板特别说明**
```
🎇 HanabiDetailTemplate.tsx - 项目唯一第五层花火详情模板
📍 文件路径：src/components/HanabiDetailTemplate.tsx
🎯 商业级专业设计，完整功能体系
📋 支持6个标签页：概览、会场信息、交通指南、观赏攻略、实用建议、更多信息
🌈 专业商业风格，面包屑导航，英雄区域展示
🔤 严格使用中文汉字显示，支持简体繁体
⚠️ 所有数据必须基于官方来源，严禁胡编乱造
```

### **数据文件格式**
```
第2层配置：src/config/monthsConfig.ts          - 月份页数据源
第3层配置：src/config/activityConfig.ts        - 活动页数据源（地区顺序固定）
第4层数据：src/data/level4-[月份]-[地区]-hanabi.ts
第5层数据：src/data/level5-[具体活动].ts
```

## 🎯 地区管理（固定不可改）

### **地区顺序（绝对不可更改）**
```
页面显示顺序：
第一行：🗼 东京 → 🌸 埼玉 → 🏖️ 千叶
第二行：🌊 神奈川 → 🌿 北关东 → 🏔️ 甲越信

代码配置：['tokyo', 'saitama', 'chiba', 'kanagawa', 'kitakanto', 'koshinetsu']
控制文件：src/config/activityConfig.ts
```

### **循环导航**
```
东京 → 埼玉 → 千叶 → 神奈川 → 北关东 → 甲信越 → 东京
```

## 💻 标准使用方法

### **第4层：地区页面（重要）**
```typescript
// 页面文件：src/app/july/hanabi/tokyo/page.tsx
import RegionalHanabiTemplate from '@/components/RegionalHanabiTemplate';
import { events, regionInfo } from '@/data/level4-july-tokyo-hanabi';

export default function TokyoHanabiPage() {
  return <RegionalHanabiTemplate events={events} regionInfo={regionInfo} />;
}
```

### **数据文件格式**
```typescript
// 数据文件：src/data/level4-july-tokyo-hanabi.ts
export const regionInfo = {
  name: '东京',
  icon: '🗼',
  description: '描述',
  totalEvents: 5,
  nextRegion: 'saitama',
  previousRegion: 'koshinetsu'
};

export const events = [
  {
    id: 'event-id',
    name: '活动名称',
    date: '7月20日',
    location: '地点',
    visitors: '77万',    // 格式：77万、500人、未公布
    fireworks: '1万发',
    likes: 147,
    imageUrl: '/images/default-hanabi.jpg',
    category: 'hanabi',
    slug: 'event-slug'
  }
];
```

## 🎨 设计规范

### **色彩主题（强制）**
```
主色调：浅粉色系 (rose-100, rose-200)
辅助色：白色系 (white)  
强调色：浅蓝色系 (blue-100, blue-200)
```

## ⚡ AI执行流程

### **标准工作流程**
```
步骤1：确认要修改的层级（第几层？）
步骤2：找到对应的模板文件（负责样式布局）
步骤3：向用户索取网页显示的信息内容
步骤4：用户提供官方数据来源
步骤5：严格按照模板格式制作（只填入数据，不改样式）
步骤6：验证页面正常访问
```

### **模板与数据分工明确**
```
🎨 模板负责：
- 页面布局和排版
- 图标显示（👥📍🎆❤️等）
- 颜色和样式设计
- 按钮和交互效果
- 响应式设计

📊 数据负责（必须找用户要）：
- 活动名称和描述
- 时间日期信息
- 地点地址信息
- 人数访客数据
- 价格费用信息
- 联系方式
- 评价和推荐数据
- 交通和设施信息
```

### **常见错误预防**
```
❌ 混淆模板和数据：自己编写活动信息
❌ 不确认层级就开始修改
❌ 不使用标准模板
❌ 修改地区顺序或图标
❌ 估算或虚构任何数据（人数、价格、时间等）
```

## 📊 项目技术信息

### **当前状态**
```
框架：Next.js 15.3.3
端口：http://localhost:3000 或 3007
样式：Tailwind CSS
类型：TypeScript
```

### **关键配置文件**
```
monthsConfig.ts    - 第2层月份配置
activityConfig.ts  - 第3层地区配置
navigation.ts      - 导航配置
```

## 🎯 重要提醒

### **商业网站标准**
```
这是商业旅游网站，所有信息必须真实可靠
不可误导用户，不可提供虚假信息
所有数据必须有官方来源支撑
```

### **AI行为准则**
```
1. 永远记住：模板=样式，数据=内容，绝不混淆
2. 遇到需要数据时，立即向用户索取官方来源
3. 不确定时停止并询问用户
4. 严格按照本项目介绍执行
5. 完成后验证功能正常
6. 🚨 四层地区花火模板专指RegionalHanabiTemplate.tsx，严禁创建替代版本
``` 